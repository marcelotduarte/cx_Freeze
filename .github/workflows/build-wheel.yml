name: Build wheel

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build_wheel:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    name: Build wheel on [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: "3.11"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Install cibuildwheel
        run: python -m pip install "cibuildwheel>=2.11.2"

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload the artifact
        uses: actions/upload-artifact@v3
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse

  publish:
    needs:
      - build_wheel
    runs-on: ubuntu-latest
    name: Publish package to PyPI

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: "3.11"

      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse

      - name: Add sdist
        run: python setup.py sdist -d wheelhouse/

      - name: Publish package to PyPI
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: wheelhouse/
          skip_existing: true
          verbose: true
