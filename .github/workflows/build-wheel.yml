name: Build wheel

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture: [x86, x64]
    name: Build [Windows ${{ matrix.architecture }}][Python ${{ matrix.python-version }}]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build setuptools
      - name: Build the wheel [Python 3.6-3.9]
        if: matrix.python-version != '3.10'
        run: |
          python -m build -o wheelhouse
      - name: Build the wheel [Python 3.10]
        if: matrix.python-version == '3.10'
        run: |
          pip install --upgrade build wheel
          git clone -b 3.0 https://github.com/anthony-tuininga/cx_Logging.git
          python -m build -o wheelhouse -n ./cx_Logging
          pip install -f wheelhouse cx_Logging
          python -m build -o wheelhouse -n .
        shell: bash
      - name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse
  publish:
    needs: windows
    runs-on: ubuntu-20.04
    name: Publish package to PyPI
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
      - name: Download the artifact
        uses: actions/download-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse
      - name: Remove extra files
        run: rm wheelhouse/cx_Logging*
      - name: Publish package to PyPI
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: wheelhouse/
          skip_existing: true
          verbose: true
