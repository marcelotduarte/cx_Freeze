name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pre_commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -v -e .[dev,doc]

      - name: Run pre-commit
        run: >-
          pre-commit run --show-diff-on-failure --color=always
          --all-files --hook-stage manual

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --pre
          pip install -v -e .[test] --no-build-isolation

      - name: Generate coverage report
        run: python -m pytest -nauto --cov="cx_Freeze" --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  tests_extra:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        python-version: ['3.10']
        extra-requirement:
          - lief==0.13.2
          - lief-disabled
          - pywin32
        include:
          - { os: ubuntu-latest, python-version: '3.10' }
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --pre
          pip install -v -e .[test] --no-build-isolation

      - name: Generate coverage report (Linux)
        if: runner.os == 'Linux'
        run: |
          pip install "`grep cibuildwheel requirements-dev.txt`"
          PY_VERSION_NODOT=$(echo ${{ matrix.python-version }}|sed 's/\.//')
          cibuildwheel --only cp${PY_VERSION_NODOT}-manylinux_x86_64
          unzip -q -o wheelhouse/cx_Freeze-*.whl "cx_Freeze/bases/*" -x "*.py"
          python -m pytest -nauto --cov="cx_Freeze" --cov-report=xml

      - name: Generate coverage report (Windows)
        if: runner.os == 'Windows'
        run: |
          if [ "${{ matrix.extra-requirement }}" == "lief-disabled" ]; then
            export CX_FREEZE_BIND=imagehlp
          else
            pip install "${{ matrix.extra-requirement }}"
          fi
          python -m pytest -nauto --cov="cx_Freeze" --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
