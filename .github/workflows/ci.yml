name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pre_commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -v -e .[dev,doc]

      - name: Run pre-commit
        run: >-
          pre-commit run --show-diff-on-failure --color=always
          --all-files --hook-stage manual

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --pre
          pip install -v -e .[test] --no-build-isolation

      - name: Generate coverage report
        run: |
          mkdir -p coverage
          python -m pytest -nauto\
            --cov="cx_Freeze" --cov-report=xml:./coverage/coverage0.xml

      - name: Extra coverage for Windows
        if: runner.os == 'Windows' && matrix.python-version == '3.10'
        run: |
          # to test lief < 0.14
          pip install "lief==0.13.2"
          python -m pytest -nauto\
            --cov="cx_Freeze" --cov-report=xml:./coverage/coverage1.xml\
            tests/test_command_build.py tests/test_command_build_exe.py\
            tests/test_winversioninfo.py
          # to test without lief (LIEF_DISABLED)
          export CX_FREEZE_BIND=imagehlp
          python -m pytest -nauto\
            --cov="cx_Freeze" --cov-report=xml:./coverage/coverage2.xml\
            tests/test_command_build.py tests/test_command_build_exe.py\
            tests/test_winversioninfo.py
          # to coverage winversioninfo using pywin32
          pip install --upgrade pywin32
          python -m pytest -nauto\
            --cov="cx_Freeze" --cov-report=xml:./coverage/coverage3.xml\
            tests/test_winversioninfo.py

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: coverage
