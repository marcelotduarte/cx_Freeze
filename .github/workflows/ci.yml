name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: drivendataorg/setup-python-uv-action@main
        with:
          cache: 'packages'
          python-version: '3.12'

      - name: Install dependencies
        run: uv pip install -e.[dev,doc]

      - name: Run pre-commit
        run: >-
          pre-commit run --show-diff-on-failure --color=always
          --all-files --hook-stage=manual

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13 ]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include:
          - os: macos-14
            python-version: '3.11'
          - os: macos-14
            python-version: '3.12'
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: drivendataorg/setup-python-uv-action@main
        with:
          cache: 'packages'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y alien fakeroot rpm

      - name: Install dependencies
        run: uv pip install -e.[test]

      - name: Generate coverage report
        run: pytest -nauto --cov="cx_Freeze" --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  tests_extra:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        python-version: ['3.10']
        extra-requirement:
          - lief==0.13.2
          - lief-disabled
          - pywin32
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: drivendataorg/setup-python-uv-action@main
        with:
          cache: 'packages'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv pip install -e.[test]

      - name: Generate coverage report
        run: |
          if [ "${{ matrix.extra-requirement }}" == "lief-disabled" ]; then
            export CX_FREEZE_BIND=imagehlp
          else
            pip install "${{ matrix.extra-requirement }}"
          fi
          pytest -nauto --cov="cx_Freeze" --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  build_unix_binary_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: ['3.10', '3.12']
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: drivendataorg/setup-python-uv-action@main
        with:
          cache: 'packages'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies - build wheel
        run: uv pip install --system "`grep cibuildwheel requirements-dev.txt`"

      - name: Build wheel for Python ${{ matrix.python-version }}
        run: |
          PYTHON_TAG=cp$(echo ${{ matrix.python-version }}|sed 's/\.//')
          cibuildwheel --only ${PYTHON_TAG}-manylinux_x86_64

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: cx-freeze-pip-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse

  tests_unix_binary_wheel:
    needs:
      - build_unix_binary_wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: ['3.10', '3.12']
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: drivendataorg/setup-python-uv-action@main
        with:
          cache: 'packages'
          python-version: ${{ matrix.python-version }}

      - name: Download the artifact
        uses: actions/download-artifact@v4
        with:
          name: cx-freeze-pip-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt -r requirements-test.txt
          uv pip install cx_Freeze --no-index --no-deps -f wheelhouse

      - name: Install dependencies - extra
        run: |
          if [ "${{ matrix.python-version }}" == "3.10" ]; then
            uv pip install -i https://pypi.anaconda.org/intel/simple numpy
          fi
          uv pip install pandas

      - name: Generate coverage report
        run: pytest -nauto --cov="cx_Freeze" --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
