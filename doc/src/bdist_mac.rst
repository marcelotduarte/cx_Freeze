bdist_mac
=========

This command is available on macOS systems, to create a macOS application
bundle (a :file:`.app` directory).

.. tabs::

   .. group-tab:: pyproject.toml

      .. code-block:: console

        cxfreeze bdist_mac

   .. group-tab:: setup.py

      .. code-block:: console

        python setup.py bdist_mac

.. list-table::
   :header-rows: 1
   :widths: 300 700
   :width: 100%

   * - option name
     - description
   * - .. option:: iconfile
     - Path to an icns icon file for the application. This will be copied into
       the bundle.
   * - .. option:: qt_menu_nib
     - Path to the qt-menu.nib file for Qt applications. By default, it will be
       auto-detected.
   * - .. option:: bundle_name
     - File name for the bundle application without the :file:`.app` extension.
   * - .. option:: plist_items
     - A list of key-value pairs (type: :code:`list[tuple[str, str]]`) to be
       added to the app bundle :file:`Info.plist` file.  Overrides any specific
       entries set by :option:`custom_info_plist` or by default.
   * - .. option:: custom_info_plist
     - File to be used as the :file:`Info.plist` in the app bundle. If not
       specified, a basic :file:`Info.plist` will be generated by default,
       which specifies ``CFBundleIconFile``, ``CFBundleDevelopmentRegion``,
       ``CFBundleIdentifier``, ``CFBundlePackageType``, and
       ``NSHighResolutionCapable``.
   * - .. option:: include_frameworks
     - A list of Framework directories to include in the app bundle.
   * - .. option:: include_resources
     - A list of tuples of additional files to include in the app bundle's
       resources directory, with the first element being the source, and second
       the destination file or directory name.
   * - .. option:: codesign_identity
     - The identity of the key to be used to sign the app bundle.
   * - .. option:: codesign_entitlements
     - The path to an entitlements file to use for your application's code
       signature.
   * - .. option:: codesign_timestamp
     - Use ``--timestamp`` when running codesign.
   * - .. option:: codesign_strict
     - Use ``--strict`` when running codesign.
   * - .. option:: codesign_verify
     - Use ``--verify`` when running codesign.
   * - .. option:: spctl_assess
     - Run spctl-assess to asses output from codesign.
   * - .. option:: codesign_deep
     - Boolean for whether to codesign using the ``--deep`` option.
   * - .. option:: codesign_options
     - Comma-seperated string of options to use with codesign ``--options``.
   * - .. option:: codesign_resource_rules
     - Plist file to be passed to codesign's ``--resource-rules`` option.
   * - .. option:: absolute_reference_path
     - Path to use for all referenced libraries instead of ``@executable_path``

.. versionadded:: 6.0
    :option:`environment_variables`, :option:`include_resources` and
    :option:`absolute_reference_path` options.
