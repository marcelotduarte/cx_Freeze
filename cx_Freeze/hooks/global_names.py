"""Generated by cx_Freeze."""

ASYNCIO_GLOBAL_NAMES = [
    "ALL_COMPLETED",
    "AbstractChildWatcher",
    "AbstractEventLoop",
    "AbstractEventLoopPolicy",
    "AbstractServer",
    "Barrier",
    "BaseEventLoop",
    "BaseProtocol",
    "BaseTransport",
    "BoundedSemaphore",
    "BrokenBarrierError",
    "BufferedProtocol",
    "CancelledError",
    "Condition",
    "DatagramProtocol",
    "DatagramTransport",
    "DefaultEventLoopPolicy",
    "Event",
    "EventLoop",
    "FIRST_COMPLETED",
    "FIRST_EXCEPTION",
    "FastChildWatcher",
    "Future",
    "Handle",
    "IncompleteReadError",
    "InvalidStateError",
    "LifoQueue",
    "LimitOverrunError",
    "Lock",
    "MultiLoopChildWatcher",
    "PidfdChildWatcher",
    "PriorityQueue",
    "Protocol",
    "Queue",
    "QueueEmpty",
    "QueueFull",
    "QueueShutDown",
    "ReadTransport",
    "Runner",
    "SafeChildWatcher",
    "SelectorEventLoop",
    "Semaphore",
    "SendfileNotAvailableError",
    "Server",
    "StreamReader",
    "StreamReaderProtocol",
    "StreamWriter",
    "SubprocessProtocol",
    "SubprocessTransport",
    "Task",
    "TaskGroup",
    "ThreadedChildWatcher",
    "Timeout",
    "TimeoutError",
    "TimerHandle",
    "Transport",
    "WriteTransport",
    "_enter_task",
    "_get_running_loop",
    "_leave_task",
    "_register_task",
    "_set_running_loop",
    "_unregister_task",
    "all_tasks",
    "as_completed",
    "create_eager_task_factory",
    "create_subprocess_exec",
    "create_subprocess_shell",
    "create_task",
    "current_task",
    "eager_task_factory",
    "ensure_future",
    "gather",
    "get_child_watcher",
    "get_event_loop",
    "get_event_loop_policy",
    "get_running_loop",
    "iscoroutine",
    "iscoroutinefunction",
    "isfuture",
    "new_event_loop",
    "open_connection",
    "open_unix_connection",
    "run",
    "run_coroutine_threadsafe",
    "set_child_watcher",
    "set_event_loop",
    "set_event_loop_policy",
    "shield",
    "sleep",
    "start_server",
    "start_unix_server",
    "timeout",
    "timeout_at",
    "to_thread",
    "wait",
    "wait_for",
    "wrap_future",
]
CONCURRENT_FUTURES_GLOBAL_NAMES = [
    "ALL_COMPLETED",
    "BrokenExecutor",
    "CancelledError",
    "Executor",
    "FIRST_COMPLETED",
    "FIRST_EXCEPTION",
    "Future",
    "InvalidStateError",
    "ProcessPoolExecutor",
    "ThreadPoolExecutor",
    "TimeoutError",
    "as_completed",
    "wait",
]
FONTTOOLS_TTLIB_GLOBAL_NAMES = [
    "AbstractConfig",
    "BytesIO",
    "Config",
    "GlyphOrder",
    "OPTIMIZE_FONT_SPEED",
    "OPTIONS",
    "OTFTableOrder",
    "SFNTReader",
    "SFNTWriter",
    "StringIO",
    "TTCollection",
    "TTFTableOrder",
    "TTFont",
    "TTLibError",
    "TTLibFileIsCollectionError",
    "Tag",
    "UnsupportedOperation",
    "byteord",
    "debugmsg",
    "deprecateArgument",
    "deprecateFunction",
    "getClassTag",
    "getCustomTableClass",
    "getSearchRange",
    "getTableClass",
    "getTableModule",
    "identifierToTag",
    "log",
    "maxPowerOfTwo",
    "newTable",
    "registerCustomTableClass",
    "reorderFontTables",
    "sfnt",
    "sortedTagList",
    "tagToIdentifier",
    "tagToXML",
    "tostr",
    "ttCollection",
    "ttFont",
    "ttGlyphSet",
    "unregisterCustomTableClass",
    "xmlToTag",
    "xmlWriter",
]
MULTIPROCESSING_GLOBAL_NAMES = [
    "Array",
    "AuthenticationError",
    "Barrier",
    "BoundedSemaphore",
    "BufferTooShort",
    "Condition",
    "Event",
    "JoinableQueue",
    "Lock",
    "Manager",
    "Pipe",
    "Pool",
    "Process",
    "ProcessError",
    "Queue",
    "RLock",
    "RawArray",
    "RawValue",
    "Semaphore",
    "SimpleQueue",
    "TimeoutError",
    "Value",
    "active_children",
    "allow_connection_pickling",
    "cpu_count",
    "current_process",
    "freeze_support",
    "get_all_start_methods",
    "get_context",
    "get_logger",
    "get_start_method",
    "log_to_stderr",
    "parent_process",
    "reducer",
    "set_executable",
    "set_forkserver_preload",
    "set_start_method",
]
NUMPY_LINALG_GLOBAL_NAMES = [
    "LinAlgError",
    "cholesky",
    "cond",
    "cross",
    "det",
    "diagonal",
    "eig",
    "eigh",
    "eigvals",
    "eigvalsh",
    "inv",
    "lstsq",
    "matmul",
    "matrix_norm",
    "matrix_power",
    "matrix_rank",
    "matrix_transpose",
    "multi_dot",
    "norm",
    "outer",
    "pinv",
    "qr",
    "slogdet",
    "solve",
    "svd",
    "svdvals",
    "tensordot",
    "tensorinv",
    "tensorsolve",
    "trace",
    "vecdot",
    "vector_norm",
]
NUMPY_MA_GLOBAL_NAMES = [
    "MAError",
    "MaskError",
    "MaskType",
    "MaskedArray",
    "abs",
    "absolute",
    "add",
    "all",
    "allclose",
    "allequal",
    "alltrue",
    "amax",
    "amin",
    "angle",
    "anom",
    "anomalies",
    "any",
    "append",
    "apply_along_axis",
    "apply_over_axes",
    "arange",
    "arccos",
    "arccosh",
    "arcsin",
    "arcsinh",
    "arctan",
    "arctan2",
    "arctanh",
    "argmax",
    "argmin",
    "argsort",
    "around",
    "array",
    "asanyarray",
    "asarray",
    "atleast_1d",
    "atleast_2d",
    "atleast_3d",
    "average",
    "bitwise_and",
    "bitwise_or",
    "bitwise_xor",
    "bool_",
    "ceil",
    "choose",
    "clip",
    "clump_masked",
    "clump_unmasked",
    "column_stack",
    "common_fill_value",
    "compress",
    "compress_cols",
    "compress_nd",
    "compress_rowcols",
    "compress_rows",
    "compressed",
    "concatenate",
    "conjugate",
    "convolve",
    "copy",
    "core",
    "corrcoef",
    "correlate",
    "cos",
    "cosh",
    "count",
    "count_masked",
    "cov",
    "cumprod",
    "cumsum",
    "default_fill_value",
    "diag",
    "diagflat",
    "diagonal",
    "diff",
    "divide",
    "dot",
    "dstack",
    "ediff1d",
    "empty",
    "empty_like",
    "equal",
    "exp",
    "expand_dims",
    "extras",
    "fabs",
    "filled",
    "fix_invalid",
    "flatnotmasked_contiguous",
    "flatnotmasked_edges",
    "flatten_mask",
    "flatten_structured_array",
    "floor",
    "floor_divide",
    "fmod",
    "frombuffer",
    "fromflex",
    "fromfunction",
    "getdata",
    "getmask",
    "getmaskarray",
    "greater",
    "greater_equal",
    "harden_mask",
    "hsplit",
    "hstack",
    "hypot",
    "identity",
    "ids",
    "in1d",
    "indices",
    "inner",
    "innerproduct",
    "intersect1d",
    "isMA",
    "isMaskedArray",
    "is_mask",
    "is_masked",
    "isarray",
    "isin",
    "left_shift",
    "less",
    "less_equal",
    "log",
    "log10",
    "log2",
    "logical_and",
    "logical_not",
    "logical_or",
    "logical_xor",
    "make_mask",
    "make_mask_descr",
    "make_mask_none",
    "mask_cols",
    "mask_or",
    "mask_rowcols",
    "mask_rows",
    "masked",
    "masked_all",
    "masked_all_like",
    "masked_array",
    "masked_equal",
    "masked_greater",
    "masked_greater_equal",
    "masked_inside",
    "masked_invalid",
    "masked_less",
    "masked_less_equal",
    "masked_not_equal",
    "masked_object",
    "masked_outside",
    "masked_print_option",
    "masked_singleton",
    "masked_values",
    "masked_where",
    "max",
    "maximum",
    "maximum_fill_value",
    "mean",
    "median",
    "min",
    "minimum",
    "minimum_fill_value",
    "mod",
    "mr_",
    "multiply",
    "mvoid",
    "ndenumerate",
    "ndim",
    "negative",
    "nomask",
    "nonzero",
    "not_equal",
    "notmasked_contiguous",
    "notmasked_edges",
    "ones",
    "ones_like",
    "outer",
    "outerproduct",
    "polyfit",
    "power",
    "prod",
    "product",
    "ptp",
    "put",
    "putmask",
    "ravel",
    "remainder",
    "repeat",
    "reshape",
    "resize",
    "right_shift",
    "round",
    "round_",
    "row_stack",
    "set_fill_value",
    "setdiff1d",
    "setxor1d",
    "shape",
    "sin",
    "sinh",
    "size",
    "soften_mask",
    "sometrue",
    "sort",
    "sqrt",
    "squeeze",
    "stack",
    "std",
    "subtract",
    "sum",
    "swapaxes",
    "take",
    "tan",
    "tanh",
    "trace",
    "transpose",
    "true_divide",
    "union1d",
    "unique",
    "vander",
    "var",
    "vstack",
    "where",
    "zeros",
    "zeros_like",
]
NUMPY_RANDOM_GLOBAL_NAMES = [
    "BitGenerator",
    "Generator",
    "MT19937",
    "PCG64",
    "PCG64DXSM",
    "Philox",
    "RandomState",
    "SFC64",
    "SeedSequence",
    "beta",
    "binomial",
    "bytes",
    "chisquare",
    "choice",
    "default_rng",
    "dirichlet",
    "exponential",
    "f",
    "gamma",
    "geometric",
    "get_state",
    "gumbel",
    "hypergeometric",
    "laplace",
    "logistic",
    "lognormal",
    "logseries",
    "multinomial",
    "multivariate_normal",
    "negative_binomial",
    "noncentral_chisquare",
    "noncentral_f",
    "normal",
    "pareto",
    "permutation",
    "poisson",
    "power",
    "rand",
    "randint",
    "randn",
    "random",
    "random_integers",
    "random_sample",
    "ranf",
    "rayleigh",
    "sample",
    "seed",
    "set_state",
    "shuffle",
    "standard_cauchy",
    "standard_exponential",
    "standard_gamma",
    "standard_normal",
    "standard_t",
    "triangular",
    "uniform",
    "vonmises",
    "wald",
    "weibull",
    "zipf",
]
NUMPY_RANDOM_MTRAND_GLOBAL_NAMES = [
    "RandomState",
    "beta",
    "binomial",
    "bytes",
    "chisquare",
    "choice",
    "dirichlet",
    "exponential",
    "f",
    "gamma",
    "geometric",
    "get_bit_generator",
    "get_state",
    "gumbel",
    "hypergeometric",
    "laplace",
    "logistic",
    "lognormal",
    "logseries",
    "multinomial",
    "multivariate_normal",
    "negative_binomial",
    "noncentral_chisquare",
    "noncentral_f",
    "normal",
    "pareto",
    "permutation",
    "poisson",
    "power",
    "rand",
    "randint",
    "randn",
    "random",
    "random_integers",
    "random_sample",
    "ranf",
    "rayleigh",
    "sample",
    "seed",
    "set_bit_generator",
    "set_state",
    "shuffle",
    "standard_cauchy",
    "standard_exponential",
    "standard_gamma",
    "standard_normal",
    "standard_t",
    "triangular",
    "uniform",
    "vonmises",
    "wald",
    "weibull",
    "zipf",
]
NUMPY_STRINGS_GLOBAL_NAMES = [
    "add",
    "capitalize",
    "center",
    "count",
    "decode",
    "encode",
    "endswith",
    "equal",
    "expandtabs",
    "find",
    "greater",
    "greater_equal",
    "index",
    "isalnum",
    "isalpha",
    "isdecimal",
    "isdigit",
    "islower",
    "isnumeric",
    "isspace",
    "istitle",
    "isupper",
    "less",
    "less_equal",
    "ljust",
    "lower",
    "lstrip",
    "mod",
    "multiply",
    "not_equal",
    "partition",
    "replace",
    "rfind",
    "rindex",
    "rjust",
    "rpartition",
    "rstrip",
    "slice",
    "startswith",
    "str_len",
    "strip",
    "swapcase",
    "title",
    "translate",
    "upper",
    "zfill",
]
NUMPY__CORE_GLOBAL_NAMES = [
    "False_",
    "ScalarType",
    "True_",
    "abs",
    "absolute",
    "acos",
    "acosh",
    "add",
    "all",
    "allclose",
    "amax",
    "amin",
    "any",
    "arange",
    "arccos",
    "arccosh",
    "arcsin",
    "arcsinh",
    "arctan",
    "arctan2",
    "arctanh",
    "argmax",
    "argmin",
    "argpartition",
    "argsort",
    "argwhere",
    "around",
    "array",
    "array2string",
    "array_equal",
    "array_equiv",
    "array_repr",
    "array_str",
    "asanyarray",
    "asarray",
    "ascontiguousarray",
    "asfortranarray",
    "asin",
    "asinh",
    "astype",
    "atan",
    "atan2",
    "atanh",
    "atleast_1d",
    "atleast_2d",
    "atleast_3d",
    "base_repr",
    "binary_repr",
    "bitwise_and",
    "bitwise_count",
    "bitwise_invert",
    "bitwise_left_shift",
    "bitwise_not",
    "bitwise_or",
    "bitwise_right_shift",
    "bitwise_xor",
    "block",
    "bool",
    "bool_",
    "broadcast",
    "busday_count",
    "busday_offset",
    "busdaycalendar",
    "byte",
    "bytes_",
    "can_cast",
    "cbrt",
    "cdouble",
    "ceil",
    "character",
    "choose",
    "clip",
    "clongdouble",
    "complex128",
    "complex256",
    "complex64",
    "complexfloating",
    "compress",
    "concat",
    "concatenate",
    "conj",
    "conjugate",
    "convolve",
    "copysign",
    "copyto",
    "correlate",
    "cos",
    "cosh",
    "count_nonzero",
    "cross",
    "csingle",
    "cumprod",
    "cumsum",
    "cumulative_prod",
    "cumulative_sum",
    "datetime64",
    "datetime_as_string",
    "datetime_data",
    "deg2rad",
    "degrees",
    "diagonal",
    "divide",
    "divmod",
    "dot",
    "double",
    "dtype",
    "e",
    "einsum",
    "einsum_path",
    "empty",
    "empty_like",
    "equal",
    "errstate",
    "euler_gamma",
    "exp",
    "exp2",
    "expm1",
    "fabs",
    "finfo",
    "flatiter",
    "flatnonzero",
    "flexible",
    "float128",
    "float16",
    "float32",
    "float64",
    "float_power",
    "floating",
    "floor",
    "floor_divide",
    "fmax",
    "fmin",
    "fmod",
    "format_float_positional",
    "format_float_scientific",
    "frexp",
    "from_dlpack",
    "frombuffer",
    "fromfile",
    "fromfunction",
    "fromiter",
    "frompyfunc",
    "fromstring",
    "full",
    "full_like",
    "gcd",
    "generic",
    "geomspace",
    "get_printoptions",
    "getbufsize",
    "geterr",
    "geterrcall",
    "greater",
    "greater_equal",
    "half",
    "heaviside",
    "hstack",
    "hypot",
    "identity",
    "iinfo",
    "indices",
    "inexact",
    "inf",
    "inner",
    "int16",
    "int32",
    "int64",
    "int8",
    "int_",
    "intc",
    "integer",
    "intp",
    "invert",
    "is_busday",
    "isclose",
    "isdtype",
    "isfinite",
    "isfortran",
    "isinf",
    "isnan",
    "isnat",
    "isscalar",
    "issubdtype",
    "lcm",
    "ldexp",
    "left_shift",
    "less",
    "less_equal",
    "lexsort",
    "linspace",
    "little_endian",
    "log",
    "log10",
    "log1p",
    "log2",
    "logaddexp",
    "logaddexp2",
    "logical_and",
    "logical_not",
    "logical_or",
    "logical_xor",
    "logspace",
    "long",
    "longdouble",
    "longlong",
    "matmul",
    "matrix_transpose",
    "matvec",
    "max",
    "maximum",
    "may_share_memory",
    "mean",
    "memmap",
    "min",
    "min_scalar_type",
    "minimum",
    "mod",
    "modf",
    "moveaxis",
    "multiply",
    "nan",
    "ndarray",
    "ndim",
    "nditer",
    "negative",
    "nested_iters",
    "newaxis",
    "nextafter",
    "nonzero",
    "not_equal",
    "number",
    "object_",
    "ones",
    "ones_like",
    "outer",
    "partition",
    "permute_dims",
    "pi",
    "positive",
    "pow",
    "power",
    "printoptions",
    "prod",
    "promote_types",
    "ptp",
    "put",
    "putmask",
    "rad2deg",
    "radians",
    "ravel",
    "recarray",
    "reciprocal",
    "record",
    "remainder",
    "repeat",
    "require",
    "reshape",
    "resize",
    "result_type",
    "right_shift",
    "rint",
    "roll",
    "rollaxis",
    "round",
    "sctypeDict",
    "searchsorted",
    "set_printoptions",
    "setbufsize",
    "seterr",
    "seterrcall",
    "shape",
    "shares_memory",
    "short",
    "sign",
    "signbit",
    "signedinteger",
    "sin",
    "single",
    "sinh",
    "size",
    "sort",
    "spacing",
    "sqrt",
    "square",
    "squeeze",
    "stack",
    "std",
    "str_",
    "subtract",
    "sum",
    "swapaxes",
    "take",
    "tan",
    "tanh",
    "tensordot",
    "timedelta64",
    "trace",
    "transpose",
    "true_divide",
    "trunc",
    "typecodes",
    "ubyte",
    "ufunc",
    "uint",
    "uint16",
    "uint32",
    "uint64",
    "uint8",
    "uintc",
    "uintp",
    "ulong",
    "ulonglong",
    "unsignedinteger",
    "unstack",
    "ushort",
    "var",
    "vdot",
    "vecdot",
    "vecmat",
    "void",
    "vstack",
    "where",
    "zeros",
    "zeros_like",
]
NUMPY__CORE_NUMERICTYPES_GLOBAL_NAMES = [
    "ScalarType",
    "bool",
    "bool_",
    "busday_count",
    "busday_offset",
    "busdaycalendar",
    "byte",
    "bytes_",
    "cdouble",
    "character",
    "clongdouble",
    "complex128",
    "complex256",
    "complex64",
    "complexfloating",
    "csingle",
    "datetime64",
    "datetime_as_string",
    "datetime_data",
    "double",
    "flexible",
    "float128",
    "float16",
    "float32",
    "float64",
    "floating",
    "generic",
    "half",
    "inexact",
    "int16",
    "int32",
    "int64",
    "int8",
    "int_",
    "intc",
    "integer",
    "intp",
    "is_busday",
    "isdtype",
    "issubdtype",
    "long",
    "longdouble",
    "longlong",
    "number",
    "object_",
    "short",
    "signedinteger",
    "single",
    "str_",
    "timedelta64",
    "typecodes",
    "ubyte",
    "uint",
    "uint16",
    "uint32",
    "uint64",
    "uint8",
    "uintc",
    "uintp",
    "ulong",
    "ulonglong",
    "unsignedinteger",
    "ushort",
    "void",
]
PYPARSING_GLOBAL_NAMES = [
    "And",
    "AtLineStart",
    "AtStringStart",
    "CaselessKeyword",
    "CaselessLiteral",
    "Char",
    "CharsNotIn",
    "CloseMatch",
    "Combine",
    "DelimitedList",
    "Dict",
    "Each",
    "Empty",
    "FollowedBy",
    "Forward",
    "GoToColumn",
    "Group",
    "IndentedBlock",
    "Keyword",
    "LineEnd",
    "LineStart",
    "Literal",
    "Located",
    "MatchFirst",
    "NoMatch",
    "NotAny",
    "OneOrMore",
    "OnlyOnce",
    "OpAssoc",
    "Opt",
    "Optional",
    "Or",
    "ParseBaseException",
    "ParseElementEnhance",
    "ParseException",
    "ParseExpression",
    "ParseFatalException",
    "ParseResults",
    "ParseSyntaxException",
    "ParserElement",
    "PositionToken",
    "PrecededBy",
    "QuotedString",
    "RecursiveGrammarException",
    "Regex",
    "SkipTo",
    "StringEnd",
    "StringStart",
    "Suppress",
    "Tag",
    "Token",
    "TokenConverter",
    "White",
    "Word",
    "WordEnd",
    "WordStart",
    "ZeroOrMore",
    "__author__",
    "__compat__",
    "__diag__",
    "__versionTime__",
    "__version__",
    "__version_time__",
    "alphanums",
    "alphas",
    "alphas8bit",
    "anyCloseTag",
    "anyOpenTag",
    "any_close_tag",
    "any_open_tag",
    "autoname_elements",
    "cStyleComment",
    "c_style_comment",
    "col",
    "common",
    "commonHTMLEntity",
    "common_html_entity",
    "conditionAsParseAction",
    "condition_as_parse_action",
    "countedArray",
    "counted_array",
    "cppStyleComment",
    "cpp_style_comment",
    "dblQuotedString",
    "dblSlashComment",
    "dbl_quoted_string",
    "dbl_slash_comment",
    "delimitedList",
    "delimited_list",
    "dictOf",
    "dict_of",
    "empty",
    "hexnums",
    "htmlComment",
    "html_comment",
    "identbodychars",
    "identchars",
    "indentedBlock",
    "infixNotation",
    "infix_notation",
    "javaStyleComment",
    "java_style_comment",
    "line",
    "lineEnd",
    "lineStart",
    "line_end",
    "line_start",
    "lineno",
    "locatedExpr",
    "makeHTMLTags",
    "makeXMLTags",
    "make_html_tags",
    "make_xml_tags",
    "matchOnlyAtCol",
    "matchPreviousExpr",
    "matchPreviousLiteral",
    "match_only_at_col",
    "match_previous_expr",
    "match_previous_literal",
    "nestedExpr",
    "nested_expr",
    "nullDebugAction",
    "null_debug_action",
    "nums",
    "oneOf",
    "one_of",
    "opAssoc",
    "originalTextFor",
    "original_text_for",
    "printables",
    "punc8bit",
    "pyparsing_common",
    "pyparsing_test",
    "pyparsing_unicode",
    "pythonStyleComment",
    "python_style_comment",
    "quotedString",
    "quoted_string",
    "removeQuotes",
    "remove_quotes",
    "replaceHTMLEntity",
    "replaceWith",
    "replace_html_entity",
    "replace_with",
    "restOfLine",
    "rest_of_line",
    "sglQuotedString",
    "sgl_quoted_string",
    "srange",
    "stringEnd",
    "stringStart",
    "string_end",
    "string_start",
    "testing",
    "tokenMap",
    "token_map",
    "traceParseAction",
    "trace_parse_action",
    "ungroup",
    "unicode",
    "unicodeString",
    "unicode_set",
    "unicode_string",
    "withAttribute",
    "withClass",
    "with_attribute",
    "with_class",
]
RE_GLOBAL_NAMES = [
    "A",
    "ASCII",
    "DOTALL",
    "I",
    "IGNORECASE",
    "L",
    "LOCALE",
    "M",
    "MULTILINE",
    "Match",
    "NOFLAG",
    "Pattern",
    "PatternError",
    "RegexFlag",
    "S",
    "U",
    "UNICODE",
    "VERBOSE",
    "X",
    "compile",
    "error",
    "escape",
    "findall",
    "finditer",
    "fullmatch",
    "match",
    "purge",
    "search",
    "split",
    "sub",
    "subn",
]
SCIPY_INTEGRATE_GLOBAL_NAMES = [
    "BDF",
    "DOP853",
    "DenseOutput",
    "IntegrationWarning",
    "LSODA",
    "ODEintWarning",
    "OdeSolution",
    "OdeSolver",
    "RK23",
    "RK45",
    "Radau",
    "complex_ode",
    "cubature",
    "cumulative_simpson",
    "cumulative_trapezoid",
    "dblquad",
    "dop",
    "fixed_quad",
    "lebedev_rule",
    "lsoda",
    "newton_cotes",
    "nquad",
    "nsum",
    "ode",
    "odeint",
    "odepack",
    "qmc_quad",
    "quad",
    "quad_vec",
    "quadpack",
    "romb",
    "simpson",
    "solve_bvp",
    "solve_ivp",
    "tanhsinh",
    "tplquad",
    "trapezoid",
    "vode",
]
SCIPY_INTERPOLATE_GLOBAL_NAMES = [
    "AAA",
    "Akima1DInterpolator",
    "BPoly",
    "BSpline",
    "BarycentricInterpolator",
    "BivariateSpline",
    "CloughTocher2DInterpolator",
    "CubicHermiteSpline",
    "CubicSpline",
    "FloaterHormannInterpolator",
    "InterpolatedUnivariateSpline",
    "KroghInterpolator",
    "LSQBivariateSpline",
    "LSQSphereBivariateSpline",
    "LSQUnivariateSpline",
    "LinearNDInterpolator",
    "NdBSpline",
    "NdPPoly",
    "NearestNDInterpolator",
    "PPoly",
    "PchipInterpolator",
    "RBFInterpolator",
    "Rbf",
    "RectBivariateSpline",
    "RectSphereBivariateSpline",
    "RegularGridInterpolator",
    "SmoothBivariateSpline",
    "SmoothSphereBivariateSpline",
    "UnivariateSpline",
    "approximate_taylor_polynomial",
    "barycentric_interpolate",
    "bisplev",
    "bisplrep",
    "fitpack",
    "fitpack2",
    "generate_knots",
    "griddata",
    "insert",
    "interp1d",
    "interp2d",
    "interpn",
    "interpnd",
    "interpolate",
    "krogh_interpolate",
    "lagrange",
    "make_interp_spline",
    "make_lsq_spline",
    "make_smoothing_spline",
    "make_splprep",
    "make_splrep",
    "ndgriddata",
    "pade",
    "pchip_interpolate",
    "polyint",
    "rbf",
    "spalde",
    "splantider",
    "splder",
    "splev",
    "splint",
    "splprep",
    "splrep",
    "sproot",
]
SCIPY_LINALG_GLOBAL_NAMES = [
    "LinAlgError",
    "LinAlgWarning",
    "bandwidth",
    "basic",
    "blas",
    "block_diag",
    "cdf2rdf",
    "cho_factor",
    "cho_solve",
    "cho_solve_banded",
    "cholesky",
    "cholesky_banded",
    "circulant",
    "clarkson_woodruff_transform",
    "companion",
    "convolution_matrix",
    "coshm",
    "cosm",
    "cossin",
    "cython_blas",
    "cython_lapack",
    "decomp",
    "decomp_cholesky",
    "decomp_lu",
    "decomp_qr",
    "decomp_schur",
    "decomp_svd",
    "det",
    "dft",
    "diagsvd",
    "eig",
    "eig_banded",
    "eigh",
    "eigh_tridiagonal",
    "eigvals",
    "eigvals_banded",
    "eigvalsh",
    "eigvalsh_tridiagonal",
    "expm",
    "expm_cond",
    "expm_frechet",
    "fiedler",
    "fiedler_companion",
    "find_best_blas_type",
    "fractional_matrix_power",
    "funm",
    "get_blas_funcs",
    "get_lapack_funcs",
    "hadamard",
    "hankel",
    "helmert",
    "hessenberg",
    "hilbert",
    "inv",
    "invhilbert",
    "invpascal",
    "ishermitian",
    "issymmetric",
    "khatri_rao",
    "kron",
    "lapack",
    "ldl",
    "leslie",
    "logm",
    "lstsq",
    "lu",
    "lu_factor",
    "lu_solve",
    "matfuncs",
    "matmul_toeplitz",
    "matrix_balance",
    "misc",
    "norm",
    "null_space",
    "ordqz",
    "orth",
    "orthogonal_procrustes",
    "pascal",
    "pinv",
    "pinvh",
    "polar",
    "qr",
    "qr_delete",
    "qr_insert",
    "qr_multiply",
    "qr_update",
    "qz",
    "rq",
    "rsf2csf",
    "schur",
    "signm",
    "sinhm",
    "sinm",
    "solve",
    "solve_banded",
    "solve_circulant",
    "solve_continuous_are",
    "solve_continuous_lyapunov",
    "solve_discrete_are",
    "solve_discrete_lyapunov",
    "solve_lyapunov",
    "solve_sylvester",
    "solve_toeplitz",
    "solve_triangular",
    "solveh_banded",
    "special_matrices",
    "sqrtm",
    "subspace_angles",
    "svd",
    "svdvals",
    "tanhm",
    "tanm",
    "toeplitz",
]
SCIPY_OPTIMIZE_GLOBAL_NAMES = [
    "BFGS",
    "Bounds",
    "BroydenFirst",
    "HessianUpdateStrategy",
    "InverseJacobian",
    "KrylovJacobian",
    "LbfgsInvHessProduct",
    "LinearConstraint",
    "NoConvergence",
    "NonlinearConstraint",
    "OptimizeResult",
    "OptimizeWarning",
    "RootResults",
    "SR1",
    "anderson",
    "approx_fprime",
    "basinhopping",
    "bisect",
    "bracket",
    "brent",
    "brenth",
    "brentq",
    "broyden1",
    "broyden2",
    "brute",
    "check_grad",
    "cobyla",
    "curve_fit",
    "diagbroyden",
    "differential_evolution",
    "direct",
    "dual_annealing",
    "excitingmixing",
    "fixed_point",
    "fmin",
    "fmin_bfgs",
    "fmin_cg",
    "fmin_cobyla",
    "fmin_l_bfgs_b",
    "fmin_ncg",
    "fmin_powell",
    "fmin_slsqp",
    "fmin_tnc",
    "fminbound",
    "fsolve",
    "golden",
    "isotonic_regression",
    "lbfgsb",
    "least_squares",
    "leastsq",
    "line_search",
    "linear_sum_assignment",
    "linearmixing",
    "linesearch",
    "linprog",
    "linprog_verbose_callback",
    "lsq_linear",
    "milp",
    "minimize",
    "minimize_scalar",
    "minpack",
    "minpack2",
    "moduleTNC",
    "newton",
    "newton_krylov",
    "nnls",
    "nonlin",
    "optimize",
    "quadratic_assignment",
    "ridder",
    "root",
    "root_scalar",
    "rosen",
    "rosen_der",
    "rosen_hess",
    "rosen_hess_prod",
    "shgo",
    "show_options",
    "slsqp",
    "tnc",
    "toms748",
    "zeros",
]
SCIPY_SPARSE_GLOBAL_NAMES = [
    "SparseEfficiencyWarning",
    "SparseWarning",
    "base",
    "block_array",
    "block_diag",
    "bmat",
    "bsr",
    "bsr_array",
    "bsr_matrix",
    "compressed",
    "construct",
    "coo",
    "coo_array",
    "coo_matrix",
    "csc",
    "csc_array",
    "csc_matrix",
    "csgraph",
    "csr",
    "csr_array",
    "csr_matrix",
    "data",
    "dia",
    "dia_array",
    "dia_matrix",
    "diags",
    "diags_array",
    "dok",
    "dok_array",
    "dok_matrix",
    "extract",
    "eye",
    "eye_array",
    "find",
    "get_index_dtype",
    "hstack",
    "identity",
    "issparse",
    "isspmatrix",
    "isspmatrix_bsr",
    "isspmatrix_coo",
    "isspmatrix_csc",
    "isspmatrix_csr",
    "isspmatrix_dia",
    "isspmatrix_dok",
    "isspmatrix_lil",
    "kron",
    "kronsum",
    "lil",
    "lil_array",
    "lil_matrix",
    "linalg",
    "load_npz",
    "rand",
    "random",
    "random_array",
    "safely_cast_index_arrays",
    "save_npz",
    "sparray",
    "sparsetools",
    "spdiags",
    "spmatrix",
    "sputils",
    "tril",
    "triu",
    "vstack",
]
SCIPY_SPARSE_LINALG_GLOBAL_NAMES = [
    "ArpackError",
    "ArpackNoConvergence",
    "LaplacianNd",
    "LinearOperator",
    "MatrixRankWarning",
    "SuperLU",
    "aslinearoperator",
    "bicg",
    "bicgstab",
    "cg",
    "cgs",
    "dsolve",
    "eigen",
    "eigs",
    "eigsh",
    "expm",
    "expm_multiply",
    "factorized",
    "gcrotmk",
    "gmres",
    "interface",
    "inv",
    "is_sptriangular",
    "isolve",
    "lgmres",
    "lobpcg",
    "lsmr",
    "lsqr",
    "matfuncs",
    "matrix_power",
    "minres",
    "norm",
    "onenormest",
    "qmr",
    "spbandwidth",
    "spilu",
    "splu",
    "spsolve",
    "spsolve_triangular",
    "svds",
    "tfqmr",
    "use_solver",
]
SCIPY_SPATIAL_GLOBAL_NAMES = [
    "ConvexHull",
    "Delaunay",
    "HalfspaceIntersection",
    "KDTree",
    "QhullError",
    "Rectangle",
    "SphericalVoronoi",
    "Voronoi",
    "cKDTree",
    "ckdtree",
    "convex_hull_plot_2d",
    "delaunay_plot_2d",
    "distance",
    "distance_matrix",
    "geometric_slerp",
    "kdtree",
    "minkowski_distance",
    "minkowski_distance_p",
    "procrustes",
    "qhull",
    "transform",
    "tsearch",
    "voronoi_plot_2d",
]
SCIPY_SPECIAL_GLOBAL_NAMES = [
    "SpecialFunctionError",
    "SpecialFunctionWarning",
    "agm",
    "ai_zeros",
    "airy",
    "airye",
    "assoc_laguerre",
    "assoc_legendre_p",
    "assoc_legendre_p_all",
    "bdtr",
    "bdtrc",
    "bdtri",
    "bdtrik",
    "bdtrin",
    "bei",
    "bei_zeros",
    "beip",
    "beip_zeros",
    "ber",
    "ber_zeros",
    "bernoulli",
    "berp",
    "berp_zeros",
    "besselpoly",
    "beta",
    "betainc",
    "betaincc",
    "betainccinv",
    "betaincinv",
    "betaln",
    "bi_zeros",
    "binom",
    "boxcox",
    "boxcox1p",
    "btdtria",
    "btdtrib",
    "c_roots",
    "cbrt",
    "cg_roots",
    "chdtr",
    "chdtrc",
    "chdtri",
    "chdtriv",
    "chebyc",
    "chebys",
    "chebyt",
    "chebyu",
    "chndtr",
    "chndtridf",
    "chndtrinc",
    "chndtrix",
    "clpmn",
    "comb",
    "cosdg",
    "cosm1",
    "cotdg",
    "dawsn",
    "digamma",
    "diric",
    "ellip_harm",
    "ellip_harm_2",
    "ellip_normal",
    "ellipe",
    "ellipeinc",
    "ellipj",
    "ellipk",
    "ellipkinc",
    "ellipkm1",
    "elliprc",
    "elliprd",
    "elliprf",
    "elliprg",
    "elliprj",
    "entr",
    "erf",
    "erf_zeros",
    "erfc",
    "erfcinv",
    "erfcx",
    "erfi",
    "erfinv",
    "errstate",
    "euler",
    "eval_chebyc",
    "eval_chebys",
    "eval_chebyt",
    "eval_chebyu",
    "eval_gegenbauer",
    "eval_genlaguerre",
    "eval_hermite",
    "eval_hermitenorm",
    "eval_jacobi",
    "eval_laguerre",
    "eval_legendre",
    "eval_sh_chebyt",
    "eval_sh_chebyu",
    "eval_sh_jacobi",
    "eval_sh_legendre",
    "exp1",
    "exp10",
    "exp2",
    "expi",
    "expit",
    "expm1",
    "expn",
    "exprel",
    "factorial",
    "factorial2",
    "factorialk",
    "fdtr",
    "fdtrc",
    "fdtri",
    "fdtridfd",
    "fresnel",
    "fresnel_zeros",
    "fresnelc_zeros",
    "fresnels_zeros",
    "gamma",
    "gammainc",
    "gammaincc",
    "gammainccinv",
    "gammaincinv",
    "gammaln",
    "gammasgn",
    "gdtr",
    "gdtrc",
    "gdtria",
    "gdtrib",
    "gdtrix",
    "gegenbauer",
    "genlaguerre",
    "geterr",
    "h1vp",
    "h2vp",
    "h_roots",
    "hankel1",
    "hankel1e",
    "hankel2",
    "hankel2e",
    "he_roots",
    "hermite",
    "hermitenorm",
    "huber",
    "hyp0f1",
    "hyp1f1",
    "hyp2f1",
    "hyperu",
    "i0",
    "i0e",
    "i1",
    "i1e",
    "inv_boxcox",
    "inv_boxcox1p",
    "it2i0k0",
    "it2j0y0",
    "it2struve0",
    "itairy",
    "iti0k0",
    "itj0y0",
    "itmodstruve0",
    "itstruve0",
    "iv",
    "ive",
    "ivp",
    "j0",
    "j1",
    "j_roots",
    "jacobi",
    "jn",
    "jn_zeros",
    "jnjnp_zeros",
    "jnp_zeros",
    "jnyn_zeros",
    "js_roots",
    "jv",
    "jve",
    "jvp",
    "k0",
    "k0e",
    "k1",
    "k1e",
    "kei",
    "kei_zeros",
    "keip",
    "keip_zeros",
    "kelvin",
    "kelvin_zeros",
    "ker",
    "ker_zeros",
    "kerp",
    "kerp_zeros",
    "kl_div",
    "kn",
    "kolmogi",
    "kolmogorov",
    "kv",
    "kve",
    "kvp",
    "l_roots",
    "la_roots",
    "laguerre",
    "lambertw",
    "legendre",
    "legendre_p",
    "legendre_p_all",
    "lmbda",
    "log1p",
    "log_expit",
    "log_ndtr",
    "log_softmax",
    "log_wright_bessel",
    "loggamma",
    "logit",
    "logsumexp",
    "lpmn",
    "lpmv",
    "lpn",
    "lqmn",
    "lqn",
    "mathieu_a",
    "mathieu_b",
    "mathieu_cem",
    "mathieu_even_coef",
    "mathieu_modcem1",
    "mathieu_modcem2",
    "mathieu_modsem1",
    "mathieu_modsem2",
    "mathieu_odd_coef",
    "mathieu_sem",
    "modfresnelm",
    "modfresnelp",
    "modstruve",
    "multigammaln",
    "nbdtr",
    "nbdtrc",
    "nbdtri",
    "nbdtrik",
    "nbdtrin",
    "ncfdtr",
    "ncfdtri",
    "ncfdtridfd",
    "ncfdtridfn",
    "ncfdtrinc",
    "nctdtr",
    "nctdtridf",
    "nctdtrinc",
    "nctdtrit",
    "ndtr",
    "ndtri",
    "ndtri_exp",
    "nrdtrimn",
    "nrdtrisd",
    "obl_ang1",
    "obl_ang1_cv",
    "obl_cv",
    "obl_cv_seq",
    "obl_rad1",
    "obl_rad1_cv",
    "obl_rad2",
    "obl_rad2_cv",
    "owens_t",
    "p_roots",
    "pbdn_seq",
    "pbdv",
    "pbdv_seq",
    "pbvv",
    "pbvv_seq",
    "pbwa",
    "pdtr",
    "pdtrc",
    "pdtri",
    "pdtrik",
    "perm",
    "poch",
    "polygamma",
    "powm1",
    "pro_ang1",
    "pro_ang1_cv",
    "pro_cv",
    "pro_cv_seq",
    "pro_rad1",
    "pro_rad1_cv",
    "pro_rad2",
    "pro_rad2_cv",
    "ps_roots",
    "pseudo_huber",
    "psi",
    "radian",
    "rel_entr",
    "rgamma",
    "riccati_jn",
    "riccati_yn",
    "roots_chebyc",
    "roots_chebys",
    "roots_chebyt",
    "roots_chebyu",
    "roots_gegenbauer",
    "roots_genlaguerre",
    "roots_hermite",
    "roots_hermitenorm",
    "roots_jacobi",
    "roots_laguerre",
    "roots_legendre",
    "roots_sh_chebyt",
    "roots_sh_chebyu",
    "roots_sh_jacobi",
    "roots_sh_legendre",
    "round",
    "s_roots",
    "seterr",
    "sh_chebyt",
    "sh_chebyu",
    "sh_jacobi",
    "sh_legendre",
    "shichi",
    "sici",
    "sinc",
    "sindg",
    "smirnov",
    "smirnovi",
    "softmax",
    "softplus",
    "spence",
    "sph_harm",
    "sph_harm_y",
    "sph_harm_y_all",
    "sph_legendre_p",
    "sph_legendre_p_all",
    "spherical_in",
    "spherical_jn",
    "spherical_kn",
    "spherical_yn",
    "stdtr",
    "stdtridf",
    "stdtrit",
    "stirling2",
    "struve",
    "t_roots",
    "tandg",
    "tklmbda",
    "ts_roots",
    "u_roots",
    "us_roots",
    "voigt_profile",
    "wofz",
    "wright_bessel",
    "wrightomega",
    "xlog1py",
    "xlogy",
    "y0",
    "y0_zeros",
    "y1",
    "y1_zeros",
    "y1p_zeros",
    "yn",
    "yn_zeros",
    "ynp_zeros",
    "yv",
    "yve",
    "yvp",
    "zeta",
    "zetac",
]
SCIPY_STATS_GLOBAL_NAMES = [
    "Binomial",
    "BootstrapMethod",
    "CensoredData",
    "ConstantInputWarning",
    "Covariance",
    "DegenerateDataWarning",
    "FitError",
    "Mixture",
    "MonteCarloMethod",
    "NearConstantInputWarning",
    "Normal",
    "PermutationMethod",
    "Uniform",
    "abs",
    "alexandergovern",
    "alpha",
    "anderson",
    "anderson_ksamp",
    "anglit",
    "ansari",
    "arcsine",
    "argus",
    "barnard_exact",
    "bartlett",
    "bayes_mvs",
    "bernoulli",
    "beta",
    "betabinom",
    "betanbinom",
    "betaprime",
    "biasedurn",
    "binned_statistic",
    "binned_statistic_2d",
    "binned_statistic_dd",
    "binom",
    "binomtest",
    "boltzmann",
    "bootstrap",
    "boschloo_exact",
    "boxcox",
    "boxcox_llf",
    "boxcox_normmax",
    "boxcox_normplot",
    "bradford",
    "brunnermunzel",
    "burr",
    "burr12",
    "bws_test",
    "cauchy",
    "chatterjeexi",
    "chi",
    "chi2",
    "chi2_contingency",
    "chisquare",
    "circmean",
    "circstd",
    "circvar",
    "combine_pvalues",
    "contingency",
    "cosine",
    "cramervonmises",
    "cramervonmises_2samp",
    "crystalball",
    "cumfreq",
    "describe",
    "dgamma",
    "differential_entropy",
    "directional_stats",
    "dirichlet",
    "dirichlet_multinomial",
    "distributions",
    "dlaplace",
    "dpareto_lognorm",
    "dunnett",
    "dweibull",
    "ecdf",
    "energy_distance",
    "entropy",
    "epps_singleton_2samp",
    "erlang",
    "exp",
    "expectile",
    "expon",
    "exponnorm",
    "exponpow",
    "exponweib",
    "f",
    "f_oneway",
    "false_discovery_control",
    "fatiguelife",
    "find_repeats",
    "fisher_exact",
    "fisk",
    "fit",
    "fligner",
    "foldcauchy",
    "foldnorm",
    "friedmanchisquare",
    "gamma",
    "gausshyper",
    "gaussian_kde",
    "genexpon",
    "genextreme",
    "gengamma",
    "genhalflogistic",
    "genhyperbolic",
    "geninvgauss",
    "genlogistic",
    "gennorm",
    "genpareto",
    "geom",
    "gibrat",
    "gmean",
    "gompertz",
    "goodness_of_fit",
    "gstd",
    "gumbel_l",
    "gumbel_r",
    "gzscore",
    "halfcauchy",
    "halfgennorm",
    "halflogistic",
    "halfnorm",
    "hmean",
    "hypergeom",
    "hypsecant",
    "invgamma",
    "invgauss",
    "invweibull",
    "invwishart",
    "iqr",
    "irwinhall",
    "jarque_bera",
    "jf_skew_t",
    "johnsonsb",
    "johnsonsu",
    "kappa3",
    "kappa4",
    "kde",
    "kendalltau",
    "kruskal",
    "ks_1samp",
    "ks_2samp",
    "ksone",
    "kstat",
    "kstatvar",
    "kstest",
    "kstwo",
    "kstwobign",
    "kurtosis",
    "kurtosistest",
    "landau",
    "laplace",
    "laplace_asymmetric",
    "levene",
    "levy",
    "levy_l",
    "levy_stable",
    "linregress",
    "lmoment",
    "log",
    "loggamma",
    "logistic",
    "loglaplace",
    "lognorm",
    "logrank",
    "logser",
    "loguniform",
    "lomax",
    "make_distribution",
    "mannwhitneyu",
    "matrix_normal",
    "maxwell",
    "median_abs_deviation",
    "median_test",
    "mielke",
    "mode",
    "moment",
    "monte_carlo_test",
    "mood",
    "morestats",
    "moyal",
    "mstats",
    "mstats_basic",
    "mstats_extras",
    "multinomial",
    "multiscale_graphcorr",
    "multivariate_hypergeom",
    "multivariate_normal",
    "multivariate_t",
    "mvn",
    "mvsdist",
    "nakagami",
    "nbinom",
    "ncf",
    "nchypergeom_fisher",
    "nchypergeom_wallenius",
    "nct",
    "ncx2",
    "nhypergeom",
    "norm",
    "normal_inverse_gamma",
    "normaltest",
    "norminvgauss",
    "obrientransform",
    "order_statistic",
    "ortho_group",
    "page_trend_test",
    "pareto",
    "pearson3",
    "pearsonr",
    "percentileofscore",
    "permutation_test",
    "planck",
    "pmean",
    "pointbiserialr",
    "poisson",
    "poisson_binom",
    "poisson_means_test",
    "power",
    "power_divergence",
    "powerlaw",
    "powerlognorm",
    "powernorm",
    "ppcc_max",
    "ppcc_plot",
    "probplot",
    "qmc",
    "quantile",
    "quantile_test",
    "randint",
    "random_correlation",
    "random_table",
    "rankdata",
    "ranksums",
    "rayleigh",
    "rdist",
    "recipinvgauss",
    "reciprocal",
    "rel_breitwigner",
    "relfreq",
    "rice",
    "rv_continuous",
    "rv_discrete",
    "rv_histogram",
    "scoreatpercentile",
    "sem",
    "semicircular",
    "shapiro",
    "siegelslopes",
    "sigmaclip",
    "skellam",
    "skew",
    "skewcauchy",
    "skewnorm",
    "skewtest",
    "sobol_indices",
    "somersd",
    "spearmanr",
    "special_ortho_group",
    "stats",
    "studentized_range",
    "t",
    "theilslopes",
    "tiecorrect",
    "tmax",
    "tmean",
    "tmin",
    "trapezoid",
    "triang",
    "trim1",
    "trim_mean",
    "trimboth",
    "truncate",
    "truncexpon",
    "truncnorm",
    "truncpareto",
    "truncweibull_min",
    "tsem",
    "tstd",
    "ttest_1samp",
    "ttest_ind",
    "ttest_ind_from_stats",
    "ttest_rel",
    "tukey_hsd",
    "tukeylambda",
    "tvar",
    "uniform",
    "uniform_direction",
    "unitary_group",
    "variation",
    "vonmises",
    "vonmises_fisher",
    "vonmises_line",
    "wald",
    "wasserstein_distance",
    "wasserstein_distance_nd",
    "weibull_max",
    "weibull_min",
    "weightedtau",
    "wilcoxon",
    "wishart",
    "wrapcauchy",
    "yeojohnson",
    "yeojohnson_llf",
    "yeojohnson_normmax",
    "yeojohnson_normplot",
    "yulesimon",
    "zipf",
    "zipfian",
    "zmap",
    "zscore",
]
SCIPY__LIB_ARRAY_API_COMPAT_GLOBAL_NAMES = [
    "_internal",
    "array_namespace",
    "common",
    "device",
    "get_namespace",
    "is_array_api_obj",
    "is_array_api_strict_namespace",
    "is_cupy_array",
    "is_cupy_namespace",
    "is_dask_array",
    "is_dask_namespace",
    "is_jax_array",
    "is_jax_namespace",
    "is_lazy_array",
    "is_ndonnx_array",
    "is_ndonnx_namespace",
    "is_numpy_array",
    "is_numpy_namespace",
    "is_pydata_sparse_array",
    "is_pydata_sparse_namespace",
    "is_torch_array",
    "is_torch_namespace",
    "is_writeable_array",
    "numpy",
    "size",
    "to_device",
]
TKINTER_GLOBAL_NAMES = [
    "ACTIVE",
    "ALL",
    "ANCHOR",
    "ARC",
    "BASELINE",
    "BEVEL",
    "BOTH",
    "BOTTOM",
    "BROWSE",
    "BUTT",
    "BaseWidget",
    "BitmapImage",
    "BooleanVar",
    "Button",
    "CASCADE",
    "CENTER",
    "CHAR",
    "CHECKBUTTON",
    "CHORD",
    "COMMAND",
    "CURRENT",
    "CallWrapper",
    "Canvas",
    "Checkbutton",
    "DISABLED",
    "DOTBOX",
    "DoubleVar",
    "E",
    "END",
    "EW",
    "EXCEPTION",
    "EXTENDED",
    "Entry",
    "Event",
    "EventType",
    "FALSE",
    "FIRST",
    "FLAT",
    "Frame",
    "GROOVE",
    "Grid",
    "HIDDEN",
    "HORIZONTAL",
    "INSERT",
    "INSIDE",
    "Image",
    "IntVar",
    "LAST",
    "LEFT",
    "Label",
    "LabelFrame",
    "Listbox",
    "MITER",
    "MOVETO",
    "MULTIPLE",
    "Menu",
    "Menubutton",
    "Message",
    "Misc",
    "N",
    "NE",
    "NO",
    "NONE",
    "NORMAL",
    "NS",
    "NSEW",
    "NUMERIC",
    "NW",
    "NoDefaultRoot",
    "OFF",
    "ON",
    "OUTSIDE",
    "OptionMenu",
    "PAGES",
    "PIESLICE",
    "PROJECTING",
    "Pack",
    "PanedWindow",
    "PhotoImage",
    "Place",
    "RADIOBUTTON",
    "RAISED",
    "READABLE",
    "RIDGE",
    "RIGHT",
    "ROUND",
    "Radiobutton",
    "S",
    "SCROLL",
    "SE",
    "SEL",
    "SEL_FIRST",
    "SEL_LAST",
    "SEPARATOR",
    "SINGLE",
    "SOLID",
    "SUNKEN",
    "SW",
    "Scale",
    "Scrollbar",
    "Spinbox",
    "StringVar",
    "TOP",
    "TRUE",
    "Tcl",
    "TclError",
    "TclVersion",
    "Text",
    "Tk",
    "TkVersion",
    "Toplevel",
    "UNDERLINE",
    "UNITS",
    "VERTICAL",
    "Variable",
    "W",
    "WORD",
    "WRITABLE",
    "Widget",
    "Wm",
    "X",
    "XView",
    "Y",
    "YES",
    "YView",
    "getboolean",
    "getdouble",
    "getint",
    "image_names",
    "image_types",
    "mainloop",
]
ZMQ_BACKEND_GLOBAL_NAMES = [
    "Context",
    "Frame",
    "IPC_PATH_MAX_LEN",
    "Message",
    "Socket",
    "curve_keypair",
    "curve_public",
    "has",
    "proxy",
    "proxy_steerable",
    "strerror",
    "zmq_errno",
    "zmq_poll",
    "zmq_version_info",
]
ZONEINFO_GLOBAL_NAMES = [
    "InvalidTZPathWarning",
    "TZPATH",
    "ZoneInfo",
    "ZoneInfoNotFoundError",
    "available_timezones",
    "reset_tzpath",
]
