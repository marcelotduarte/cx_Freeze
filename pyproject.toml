[build-system]
requires = [
    "setuptools>=61.2",
    "wheel>=0.37.1",
    "cx_Logging>=3.1 ;sys_platform == 'win32'",
]
build-backend = "setuptools.build_meta"

[project]
name = "cx_Freeze"
version = "6.14.0"
description = "Create standalone executables from Python scripts"
authors = [{name = "Anthony Tuininga", email = "anthony.tuininga@gmail.com"}]
maintainers = [{name = "Marcelo Duarte", email = "marcelotduarte@users.noreply.github.com"}]
license = {text = "Python Software Foundation License"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Python Software Foundation License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
]
keywords = ["cx-freeze cxfreeze cx_Freeze freeze python"]
requires-python = ">=3.7.4"
dependencies = [
    "setuptools>=61.2,<67",
    "cx_Logging>=3.1 ;sys_platform == 'win32'",
    "lief>=0.12.0 ;sys_platform == 'win32'",
    "patchelf>=0.14 ;sys_platform == 'linux' and platform_machine == 'x86_64'",
    "patchelf>=0.14 ;sys_platform == 'linux' and platform_machine == 'i686'",
    "patchelf>=0.14 ;sys_platform == 'linux' and platform_machine == 'aarch64'",
    "patchelf>=0.14 ;sys_platform == 'linux' and platform_machine == 'ppc64le'",
    "patchelf>=0.14 ;sys_platform == 'linux' and platform_machine == 's390x'",
]

[project.optional-dependencies]
dev = [
    "bump2version>=1.0.1",
    "cibuildwheel>=2.11.2",
    "pre-commit>=2.20.0",
    "pylint>=2.15.4",
    "wheel>=0.37.1",
]
doc = [
    "sphinx==5.3.0",
    "sphinx-tabs",
    "furo",
]
test = [
    "nose==1.3.7",
    "pygments>=2.13.0",
    "pytest>=7.1.3",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Home = "https://marcelotduarte.github.io/cx_Freeze"
Changelog = "https://cx-freeze.readthedocs.io/en/latest/releasenotes.html"
Documentation = "https://cx-freeze.readthedocs.io"
Source = "https://github.com/marcelotduarte/cx_Freeze"
Tracker = "https://github.com/marcelotduarte/cx_Freeze/issues"
Workflows = "https://github.com/marcelotduarte/cx_Freeze/actions?query=branch:main"

[project.scripts]
cxfreeze = "cx_Freeze.cli:main"
cxfreeze-quickstart = "cx_Freeze.setupwriter:main"

[project.entry-points."distutils.setup_keywords"]
executables = "cx_Freeze.executable:validate_executables"

[project.entry-points."setuptools.finalize_distribution_options"]
cxfreeze-plugin = "cx_Freeze:plugin_install"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = ["doc/src/license.rst"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.distutils.bdist_wheel]
universal = 0

[tool.flake8]
exclude = """
.git,
__pycache__,
doc/src/conf.py"""
# E203, W503 - Incompatible with black see https://github.com/ambv/black/issues/315
ignore = """
E203, W503,
E266,"""
inline-quotes = "double"

[tool.black]
line-length = 79
target-version = ["py37"]
exclude = "tests/samples/invalid_syntax.py"

[tool.isort]
profile = "black"
line_length = 79
skip_gitignore = true
add_imports = ["from __future__ import annotations"]

[tool.pylint]
format.max-line-length = 79
master.ignore="""
darwintools.py,
freezer.py,
setupwriter.py
"""
master.ignore-paths = """
^samples/.*.py$,
^tests/samples/.*.py$,
^doc/src/conf.py$
"""
master.py-version = "3.7"
messages_control.disable = [
    "duplicate-code",
    "fixme",
    "import-error",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-statements",
    "wrong-import-order",
]
reports.output-format = "colorized"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:distutils.*",
    "ignore::DeprecationWarning:setuptools.*",
]

[tool.cibuildwheel]
build = "cp3*"
build-frontend = "build"
build-verbosity = "1"

[tool.cibuildwheel.linux]
archs = "x86_64 aarch64"
before-build = """
cd /opt/_internal && tar -xvf static-libs-for-embedding-only.tar.xz
"""
repair-wheel-command = "auditwheel repair -L /bases/lib -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
archs = "x86_64 universal2 arm64"
skip = "cp38-macosx_universal2 cp38-macosx_arm64"
repair-wheel-command = """
delocate-listdeps {wheel} &&
delocate-wheel --require-archs {delocate_archs} -L bases/lib -w {dest_dir} {wheel}
"""
